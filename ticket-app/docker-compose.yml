version: "3.1"

services:

  db-ticket:
    build:
      context: .
      dockerfile: Dockerfile-postgres
    restart: always
    ports:
      - "9001:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=db
    volumes:
      - ticket-db-vol:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U user -d db"
      interval: 2s
      timeout: 3s
      retries: 5
    networks:
      - local-bridge

  ticket-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db-ticket:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - local-bridge
      - pat-peering-bridge

  ftp-server:
    container_name: my-ftp-server
    environment:
      - FTP_PASS=123
      - FTP_USER=user
    image: garethflowers/ftp-server
    ports:
      - '20-21:20-21/tcp'
      - '40000-40009:40000-40009/tcp'
    volumes:
      - ftp-server:/home/user
    networks:
      - pat-peering-bridge

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - local-bridge

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092"
      - "9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_CREATE_TOPICS: "booking-status"
    networks:
      - local-bridge
      - pat-peering-bridge
    depends_on:
      - zoo1

volumes:
  ticket-db-vol:
  ftp-server:
networks:
  local-bridge:
    driver: bridge
  pat-peering-bridge:
    name: pat-peering-bridge
